---
- name: upgrade all packages (Version 6 or 7)
  yum: 
    name: "*" 
    state: latest
    skip_broken: yes
    update_cache: yes
  ignore_errors: yes
  register: yum_cmd_out
  when:
    - (ansible_facts['distribution_major_version'] == '6') or
      (ansible_facts['distribution_major_version'] == '7')

- name: upgrade all packages (Version 8)
  dnf: 
    name: "*" 
    state: latest
    skip_broken: yes
    update_cache: yes
  ignore_errors: yes
  register: yum_cmd_out
  when:
    - ansible_facts['distribution_major_version'] == '8'

- name: Print errors if yum failed
  debug:
    msg: "{{ yum_cmd_out }}"
  when: yum_cmd_out

- name: check to see if we need a reboot
  command: needs-restarting -r
  register: result
  ignore_errors: yes

- name: display result
  debug:
    var: result.rc

- name: Reboot Server if Necessary
  command: shutdown -r now "Ansible Updates Triggered"
  become: true
  async: 30
  poll: 0
  when: result.rc == 1

- name: Pausing to allow server to shutdown and terminate our SSH connection
  pause: seconds=30
  when: result.rc == 1

- name: Wait for reboot to complete and SSH to become available
  local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=30 timeout=600
  retries: 30
  delay: 10
  when: result.rc == 1
